name: Update Docs

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/update-docs.yml' # this file
      - 'scripts/*'

env:
  TEST_TAG: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  build-and-load:
    name: Build and Upload Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.17.0, 10.22.0, 12.22.1, 14.17.0, 16.14.2, 18.10.0]
    steps:
      - name: üèÅ Checkout repo
        uses: actions/checkout@v3

      - name: üê≥ Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: üè∑Ô∏è Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            # use custom value instead of git tag
            type=semver,pattern={{version}},value=${{ matrix.node-version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ matrix.node-version }}
            type=semver,pattern={{major}},value=${{ matrix.node-version }}
            # latest if node version is highest (manually checking the latest version!)
            # is there a way to do this automatically?
            type=raw,value=latest,enable=${{ matrix.node-version == '18.16.0' }}

      # https://docs.docker.com/build/ci/github-actions/test-before-push/
      # this first build just caches the layers
      - name: üèóÔ∏è Build
        uses: docker/build-push-action@v4
        with:
          build-args: |
            NODE_VERSION=${{ matrix.node-version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image-${{ matrix.node-version }}.tar

      # https://docs.docker.com/build/ci/github-actions/share-image-jobs/
      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: image-${{ matrix.node-version }}
          path: /tmp/image-${{ matrix.node-version }}.tar

  update-docs:
    runs-on: ubuntu-latest
    needs: build-and-load
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # download to working directory
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts

      - name: check directory
        run: ls -R /tmp/artifacts

      - name: Run Script
        uses: actions/github-script@v6
        id: script
        with:
          result-encoding: string
          script: |
            const script = require('./scripts/update-versions.js')
            await script({ github, context, core })
