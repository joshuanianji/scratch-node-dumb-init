name: Build Images

on:
  push:
    paths:
      - "Dockerfile"
      - ".github/workflows/build-and-deploy.yml" # this file
  pull_request:

# https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
jobs:
  build-images:
    name: 🐳 Build Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Based on node versions astefanutti/scratch-node has available
        # https://github.com/astefanutti/scratch-node
        node-version: [8.17.0, 10.22.0, 12.22.1, 14.17.0, 16.14.2, 18.10.0]
        architecture: [amd64, arm64]
    steps:
      - name: 🏁 Checkout repo
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: 🔒 Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }}
          tags: |
            # use custom value instead of git tag
            type=semver,pattern={{version}},value=${{ matrix.node-version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ matrix.node-version }}
            type=semver,pattern={{major}},value=${{ matrix.node-version }}
            # latest if node version is highest (manually checking the latest version!)
            # is there a way to do this automatically?
            type=latest,value=${{ matrix.node-version == '18.16.0' }}
          flavor: 

      - name: 🏗️ Build Image
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            NODE_VERSION=${{ matrix.node-version }}
            ARCH=${{ matrix.architecture }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Get sizes
        run: docker images
